Порядок добавления функциональности в расширении

1) Заимствуйте из основной конфигурации в расширение объект, который собираетесь изменить

2) Реализуйте задуманное изменение для объекта в расширении, в процессе заимствуя те объекты, без которых разработка изменений не получается

3) После реализации изменений – проанализируйте их на предмет «без каких объектов основной конфигурации нам будет плохо» и… заимствуйте еще и эти объекты.







Методика выбора аннотации при расширении методов (функций и процедур)



1. Определите, что нужно изменять в расширении:

А. Результат(ы) расширяемой процедуры (функции)

Б. Сам процесс выполнения расширяемой процедуры (функции)

2. Если надо изменять результат и расширяем функцию – применяем аннотацию &Вместо в связке с командой ПродолжитьВызов() в самой функции в расширении.


3. Если надо изменять результат и расширяем процедуру – применяем аннотацию &После и изменяем в расширении требуемый объект.


4. Если надо изменять процесс и расширяем функцию. Определите - эти изменения процесса влияют на результат функции? Можно ли все же 
изменения свести к изменениям результата (пусть даже за счет более громоздкого кодирования)? Если да - применяем аннотацию &Вместо в связке 
с командой ПродолжитьВызов() в самой функции в расширении. А вот если нет, то с грустью применяем &ИзменениеИКонтроль и готовимся тратить 
время на адаптацию нашего расширения при КАЖДОМ обновлении «родительской» конфигурации.


5. Если надо изменять процесс и расширяем процедуру. Определите - эти изменения процесса влияют на результаты процесса? Можно ли получить 
после процесса программный доступ к его результатам? Например, через параметры процедуры или через объект, в модуле которого процедура применяется. 
Если да - применяем аннотацию &После и, пусть даже за счет более громоздкого кодирования, изменяем нужные объекты. А вот если нет, то с грустью 
применяем &ИзменениеИКонтроль и готовимся тратить время на адаптацию нашего расширения при КАЖДОМ обновлении «родительской» конфигурации.


Да, Вы все верно поняли, методика рекомендует любой ценой превратить изменение процесса в изменение результата. И поверьте, это будет 
небольшая цена за Ваше спокойствие при обновлениях типового решения.





Бесшовное программирование в расширениях



Ради собственного спокойствия при будущих обновлениях типового решения лучше придерживаться следующих правил:

1) Визуальные изменения элементов заимствованных форм надо стараться делать исключительно программными средствами 
(чаще всего в обработчике «ПриСозданииНаСервере», исполняемом «После»)


2) Заимствовать процедуры и функции (для внесения изменений) надо стараться исключительно с аннотацией &После


3) Во всех случаях выстраивать логику вносимых изменений по принципу «В расширении меняем не процесс, а результат!»

И тогда ваши изменения программы будут накладываться посредством расширения действительно – «бесшовно».

